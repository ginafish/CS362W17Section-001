/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 19 20:34:58 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Deck;
import dominion.PlayDominion;
import dominion.Player;
import dominion.RandNumbers;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlayDominion_ESTest extends PlayDominion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      PlayDominion.Initialize_Game();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List<Player> list0 = PlayDominion.Players;
      PlayDominion.Players = list0;
      Deck deck0 = PlayDominion.AllDecks;
      PlayDominion playDominion0 = new PlayDominion();
      PlayDominion.Players = list0;
      // Undeclared exception!
      try { 
        PlayDominion.CheckifPileIsEmpty(635);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 635, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      PlayDominion.genPlayers();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Deck deck0 = PlayDominion.AllDecks;
      PlayDominion.AllDecks = deck0;
      // Undeclared exception!
      try { 
        PlayDominion.CheckMoneyPile(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlayDominion.p2 = null;
      Player player0 = PlayDominion.p1;
      Player player1 = PlayDominion.p2;
      // Undeclared exception!
      try { 
        PlayDominion.PlayerTurn((Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.PlayDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlayDominion.Players = null;
      RandNumbers randNumbers0 = PlayDominion.Randoms;
      // Undeclared exception!
      try { 
        PlayDominion.Play_Game();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        PlayDominion.CheckMoneyPile((-333376442));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = null;
      // Undeclared exception!
      PlayDominion.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      PlayDominion playDominion1 = new PlayDominion();
      List<Player> list0 = PlayDominion.Players;
      List<Player> list1 = PlayDominion.Players;
      PlayDominion playDominion2 = new PlayDominion();
      // Undeclared exception!
      try { 
        PlayDominion.CheckifPileIsEmpty((-78));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = PlayDominion.p1;
      PlayDominion.p2 = player0;
      // Undeclared exception!
      try { 
        PlayDominion.Play_Game();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = " Turn ============================= \n";
      Player player0 = PlayDominion.p2;
      // Undeclared exception!
      try { 
        PlayDominion.PlayerTurn(player0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = PlayDominion.p1;
      // Undeclared exception!
      try { 
        PlayDominion.PlayerTurn(player0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        PlayDominion.CheckEndGame();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
